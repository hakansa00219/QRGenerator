name: QR CI
on:
    push:
        branches: [main, Development]
    pull_request:
        branches: [main, Development]
jobs: 
    tests:
        name: Unity Tests
        runs-on: ubuntu-latest

        steps:

        # Make sure gtk libraries updated
        - name: Install GTK libraries
          run: |
            sudo apt-get update
            sudo apt-get install -y libgtk-3-0 libnss3
            
        # Checkout
        - uses: actions/checkout@v4

        # Batch mode and no graphics setting
        - name: Setup Unity Environment
          run: |
            sudo mkdir -p /root/.cache/unity3d
            sudo chmod -R 777 /root/.cache/unity3d
            export UNITY_BATCH_MODE=true
            export UNITY_NO_GRAPHICS=true
            
        # Arial font
        - name: Install Arial Font
          run: |
            sudo apt-get update
            sudo apt-get install -y ttf-mscorefonts-installer

        # Permissions
        - name: Fix Cache Directory Permissions
          run: |
            sudo mkdir -p /root/.cache/unity3d
            sudo chmod -R 777 /root/.cache/unity3d
            
        # Cache
        - uses: actions/cache@v3
          with:
            path: Library
            key: Library-${{ vars.PROJECT_NAME }}-WebGL
            restore-keys: |
                Library-${{ vars.PROJECT_NAME }}-
                Library-  
                
        # Tests
        - uses: game-ci/unity-test-runner@v4
          id: TestRunner
          env:
            UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
            UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
            UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          with:
            projectPath: .
            githubToken: ${{ secrets.GITHUB_TOKEN }}
            unityVersion: 6000.0.22f1
            
        # Test Results
        - uses: actions/upload-artifact@v4
          if: always()
          with:
            name: Test results
            path: ${{ steps.TestRunner.outputs.artifactsPath }} 
            
        # Code Coverage
        - uses: actions/upload-artifact@v4
          if: always()
          with:
            name: Coverage results
            path: ${{ steps.TestRunner.outputs.coveragePath }}
            
        # Show Diff
        - name: Show git diff
          run: git diff
          
    build:
        name: Build for WebGL
        runs-on: ubuntu-latest
        needs: tests
        if: success()

        steps:
        
        # Checkout
        - uses: actions/checkout@v4

        # Cache
        - uses: actions/cache@v3
          with:
            path: Library
            key: Library-${{ vars.PROJECT_NAME }}-WebGL
            restore-keys: |
              Library-${{ vars.PROJECT_NAME }}-
              Library-

        # Show Diff
        - name: Show git diff
          run: git diff
          
        # Builder (WebGL)
        - uses: game-ci/unity-builder@v4
          env:
            UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
            UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
            UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          with:
            targetPlatform: WebGL
            buildName: WebGL
            buildPath: Build/WebGL

        # Show current dir
        - name: Show current directory
          run: pwd

        # List all contents
        - name: List contents
          run: ls -R
          
        # Storing Build
        - uses: actions/upload-artifact@v4
          with:
            name: WebGL-Build
            path: Build/WebGL

        - name: List build directory
          run: ls -R Build
            
    deploy-pages:
        name: Deploy to Github Pages
        runs-on: ubuntu-latest
        needs: build

        steps:
            # Checkout
            - uses: actions/checkout@v4

            # Download build
            - uses: actions/download-artifact@v4
              with:
                name: WebGL-Build
                path: Build

            # Checkout gh pages branch
            - name: Checkout gh-pages branch
              uses: peaceiris/actions-gh-pages@v3
              with:
                github_token: ${{ secrets.GITHUB_TOKEN }}
                publish_branch: gh-pages
                publish_dir: Build
                
    deploy-itch:
        name: Deploy to Itch.io
        runs-on: ubuntu-latest
        needs: build

        steps:
          # Checkout
          - uses: actions/checkout@v4

         # Download build
          - uses: actions/download-artifact@v4
            with:
              name: WebGL-Build
              path: Build
        
          # Install butler
          - name: Install butler
            run: |
              wget https://broth.itch.ovh/butler/linux-amd64/head/butler
              chmod +x butler
              sudo mv butler /usr/local/bin/

          # Login
          - name: Authenticate butler
            run: |
              butler login
            env:
              BUTLER_API_KEY: ${{ secrets.ITCH_IO_API_KEY }}

          # Push html5
          - name: Push WebGL build to Itch.io
            run: |
              butler push Build hsari/qr-generator:html5
            env:
              BUTLER_API_KEY: ${{ secrets.ITCH_IO_API_KEY }}
